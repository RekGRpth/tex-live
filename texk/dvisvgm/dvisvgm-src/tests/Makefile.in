# Makefile.in generated by automake 1.15 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2014 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@
VPATH = @srcdir@
am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
target_triplet = @target@
TESTS = hashcheck$(EXEEXT) BezierTest$(EXEEXT) BitmapTest$(EXEEXT) \
	BoundingBoxTest$(EXEEXT) CalculatorTest$(EXEEXT) \
	CMapManagerTest$(EXEEXT) CMapReaderTest$(EXEEXT) \
	CMapTest$(EXEEXT) ColorSpecialTest$(EXEEXT) ColorTest$(EXEEXT) \
	CommandLineTest$(EXEEXT) CRC32Test$(EXEEXT) \
	DependencyGraphTest$(EXEEXT) DirectoryTest$(EXEEXT) \
	DvisvgmSpecialTest$(EXEEXT) EmSpecialTest$(EXEEXT) \
	FileFinderTest$(EXEEXT) FilePathTest$(EXEEXT) \
	FileSystemTest$(EXEEXT) FontManagerTest$(EXEEXT) \
	FontMapTest$(EXEEXT) GFGlyphTracerTest$(EXEEXT) \
	GFReaderTest$(EXEEXT) GhostscriptTest$(EXEEXT) \
	GraphicsPathTest$(EXEEXT) JFMReaderTest$(EXEEXT) \
	LengthTest$(EXEEXT) MapLineTest$(EXEEXT) MatrixTest$(EXEEXT) \
	MessageExceptionTest$(EXEEXT) PageRagesTest$(EXEEXT) \
	PageSizeTest$(EXEEXT) PairTest$(EXEEXT) \
	PSInterpreterTest$(EXEEXT) RangeMapTest$(EXEEXT) \
	ShadingPatchTest$(EXEEXT) SplittedCharInputBufferTest$(EXEEXT) \
	StreamInputBufferTest$(EXEEXT) StreamReaderTest$(EXEEXT) \
	StreamWriterTest$(EXEEXT) SubfontTest$(EXEEXT) \
	SVGOutputTest$(EXEEXT) TensorProductPatchTest$(EXEEXT) \
	TFMReaderTest$(EXEEXT) ToUnicodeMapTest$(EXEEXT) \
	TriangularPatchTest$(EXEEXT) UnicodeTest$(EXEEXT) \
	UtilityTest$(EXEEXT) VectorIteratorTest$(EXEEXT) \
	VectorStreamTest$(EXEEXT) XMLNodeTest$(EXEEXT) \
	XMLStringTest$(EXEEXT) check-conv
check_PROGRAMS = hashcheck$(EXEEXT) BezierTest$(EXEEXT) \
	BitmapTest$(EXEEXT) BoundingBoxTest$(EXEEXT) \
	CalculatorTest$(EXEEXT) CMapManagerTest$(EXEEXT) \
	CMapReaderTest$(EXEEXT) CMapTest$(EXEEXT) \
	ColorSpecialTest$(EXEEXT) ColorTest$(EXEEXT) \
	CommandLineTest$(EXEEXT) CRC32Test$(EXEEXT) \
	DependencyGraphTest$(EXEEXT) DirectoryTest$(EXEEXT) \
	DvisvgmSpecialTest$(EXEEXT) EmSpecialTest$(EXEEXT) \
	FileFinderTest$(EXEEXT) FilePathTest$(EXEEXT) \
	FileSystemTest$(EXEEXT) FontManagerTest$(EXEEXT) \
	FontMapTest$(EXEEXT) GFGlyphTracerTest$(EXEEXT) \
	GFReaderTest$(EXEEXT) GhostscriptTest$(EXEEXT) \
	GraphicsPathTest$(EXEEXT) JFMReaderTest$(EXEEXT) \
	LengthTest$(EXEEXT) MapLineTest$(EXEEXT) MatrixTest$(EXEEXT) \
	MessageExceptionTest$(EXEEXT) PageRagesTest$(EXEEXT) \
	PageSizeTest$(EXEEXT) PairTest$(EXEEXT) \
	PSInterpreterTest$(EXEEXT) RangeMapTest$(EXEEXT) \
	ShadingPatchTest$(EXEEXT) SplittedCharInputBufferTest$(EXEEXT) \
	StreamInputBufferTest$(EXEEXT) StreamReaderTest$(EXEEXT) \
	StreamWriterTest$(EXEEXT) SubfontTest$(EXEEXT) \
	SVGOutputTest$(EXEEXT) TensorProductPatchTest$(EXEEXT) \
	TFMReaderTest$(EXEEXT) ToUnicodeMapTest$(EXEEXT) \
	TriangularPatchTest$(EXEEXT) UnicodeTest$(EXEEXT) \
	UtilityTest$(EXEEXT) VectorIteratorTest$(EXEEXT) \
	VectorStreamTest$(EXEEXT) XMLNodeTest$(EXEEXT) \
	XMLStringTest$(EXEEXT)
subdir = tests
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am_BezierTest_OBJECTS = BezierTest.$(OBJEXT)
BezierTest_OBJECTS = $(am_BezierTest_OBJECTS)
am__DEPENDENCIES_1 =
BezierTest_DEPENDENCIES = ../src/libdvisvgm.a \
	../libs/xxHash/libxxhash.a $(am__DEPENDENCIES_1)
am_BitmapTest_OBJECTS = BitmapTest.$(OBJEXT)
BitmapTest_OBJECTS = $(am_BitmapTest_OBJECTS)
BitmapTest_DEPENDENCIES = ../src/libdvisvgm.a \
	../libs/xxHash/libxxhash.a $(am__DEPENDENCIES_1)
am_BoundingBoxTest_OBJECTS = BoundingBoxTest.$(OBJEXT)
BoundingBoxTest_OBJECTS = $(am_BoundingBoxTest_OBJECTS)
BoundingBoxTest_DEPENDENCIES = ../src/libdvisvgm.a \
	../libs/xxHash/libxxhash.a $(am__DEPENDENCIES_1)
am_CMapManagerTest_OBJECTS = CMapManagerTest.$(OBJEXT)
CMapManagerTest_OBJECTS = $(am_CMapManagerTest_OBJECTS)
CMapManagerTest_DEPENDENCIES = ../src/libdvisvgm.a \
	../libs/xxHash/libxxhash.a $(am__DEPENDENCIES_1)
am_CMapReaderTest_OBJECTS = CMapReaderTest.$(OBJEXT)
CMapReaderTest_OBJECTS = $(am_CMapReaderTest_OBJECTS)
CMapReaderTest_DEPENDENCIES = ../src/libdvisvgm.a \
	../libs/xxHash/libxxhash.a $(am__DEPENDENCIES_1)
am_CMapTest_OBJECTS = CMapTest.$(OBJEXT)
CMapTest_OBJECTS = $(am_CMapTest_OBJECTS)
CMapTest_DEPENDENCIES = ../src/libdvisvgm.a ../libs/xxHash/libxxhash.a \
	$(am__DEPENDENCIES_1)
am_CRC32Test_OBJECTS = CRC32Test.$(OBJEXT)
CRC32Test_OBJECTS = $(am_CRC32Test_OBJECTS)
CRC32Test_DEPENDENCIES = ../src/libdvisvgm.a \
	../libs/xxHash/libxxhash.a $(am__DEPENDENCIES_1)
am_CalculatorTest_OBJECTS = CalculatorTest.$(OBJEXT)
CalculatorTest_OBJECTS = $(am_CalculatorTest_OBJECTS)
CalculatorTest_DEPENDENCIES = ../src/libdvisvgm.a \
	../libs/xxHash/libxxhash.a $(am__DEPENDENCIES_1)
am_ColorSpecialTest_OBJECTS = ColorSpecialTest.$(OBJEXT)
ColorSpecialTest_OBJECTS = $(am_ColorSpecialTest_OBJECTS)
ColorSpecialTest_DEPENDENCIES = ../src/libdvisvgm.a \
	../libs/xxHash/libxxhash.a $(am__DEPENDENCIES_1)
am_ColorTest_OBJECTS = ColorTest.$(OBJEXT)
ColorTest_OBJECTS = $(am_ColorTest_OBJECTS)
ColorTest_DEPENDENCIES = ../src/libdvisvgm.a \
	../libs/xxHash/libxxhash.a $(am__DEPENDENCIES_1)
am_CommandLineTest_OBJECTS = CommandLineTest.$(OBJEXT)
CommandLineTest_OBJECTS = $(am_CommandLineTest_OBJECTS)
CommandLineTest_DEPENDENCIES = ../src/libdvisvgm.a \
	../libs/xxHash/libxxhash.a $(am__DEPENDENCIES_1)
am_DependencyGraphTest_OBJECTS = DependencyGraphTest.$(OBJEXT)
DependencyGraphTest_OBJECTS = $(am_DependencyGraphTest_OBJECTS)
DependencyGraphTest_DEPENDENCIES = ../src/libdvisvgm.a \
	../libs/xxHash/libxxhash.a $(am__DEPENDENCIES_1)
am_DirectoryTest_OBJECTS = DirectoryTest.$(OBJEXT)
DirectoryTest_OBJECTS = $(am_DirectoryTest_OBJECTS)
DirectoryTest_DEPENDENCIES = ../src/libdvisvgm.a \
	../libs/xxHash/libxxhash.a $(am__DEPENDENCIES_1)
am_DvisvgmSpecialTest_OBJECTS = DvisvgmSpecialTest.$(OBJEXT)
DvisvgmSpecialTest_OBJECTS = $(am_DvisvgmSpecialTest_OBJECTS)
DvisvgmSpecialTest_DEPENDENCIES = ../src/libdvisvgm.a \
	../libs/xxHash/libxxhash.a $(am__DEPENDENCIES_1)
am_EmSpecialTest_OBJECTS = EmSpecialTest.$(OBJEXT)
EmSpecialTest_OBJECTS = $(am_EmSpecialTest_OBJECTS)
EmSpecialTest_DEPENDENCIES = ../src/libdvisvgm.a \
	../libs/xxHash/libxxhash.a $(am__DEPENDENCIES_1)
am_FileFinderTest_OBJECTS = FileFinderTest.$(OBJEXT)
FileFinderTest_OBJECTS = $(am_FileFinderTest_OBJECTS)
FileFinderTest_DEPENDENCIES = ../src/libdvisvgm.a \
	../libs/xxHash/libxxhash.a $(am__DEPENDENCIES_1)
am_FilePathTest_OBJECTS = FilePathTest.$(OBJEXT)
FilePathTest_OBJECTS = $(am_FilePathTest_OBJECTS)
FilePathTest_DEPENDENCIES = ../src/libdvisvgm.a \
	../libs/xxHash/libxxhash.a $(am__DEPENDENCIES_1)
am_FileSystemTest_OBJECTS = FileSystemTest.$(OBJEXT)
FileSystemTest_OBJECTS = $(am_FileSystemTest_OBJECTS)
FileSystemTest_DEPENDENCIES = ../src/libdvisvgm.a \
	../libs/xxHash/libxxhash.a $(am__DEPENDENCIES_1)
am_FontManagerTest_OBJECTS = FontManagerTest.$(OBJEXT)
FontManagerTest_OBJECTS = $(am_FontManagerTest_OBJECTS)
FontManagerTest_DEPENDENCIES = ../src/libdvisvgm.a \
	../libs/xxHash/libxxhash.a $(am__DEPENDENCIES_1)
am_FontMapTest_OBJECTS = FontMapTest.$(OBJEXT)
FontMapTest_OBJECTS = $(am_FontMapTest_OBJECTS)
FontMapTest_DEPENDENCIES = ../src/libdvisvgm.a \
	../libs/xxHash/libxxhash.a $(am__DEPENDENCIES_1)
am_GFGlyphTracerTest_OBJECTS = GFGlyphTracerTest.$(OBJEXT)
GFGlyphTracerTest_OBJECTS = $(am_GFGlyphTracerTest_OBJECTS)
GFGlyphTracerTest_DEPENDENCIES = ../src/libdvisvgm.a \
	../libs/xxHash/libxxhash.a $(am__DEPENDENCIES_1)
am_GFReaderTest_OBJECTS = GFReaderTest.$(OBJEXT)
GFReaderTest_OBJECTS = $(am_GFReaderTest_OBJECTS)
GFReaderTest_DEPENDENCIES = ../src/libdvisvgm.a \
	../libs/xxHash/libxxhash.a $(am__DEPENDENCIES_1)
am_GhostscriptTest_OBJECTS = GhostscriptTest.$(OBJEXT)
GhostscriptTest_OBJECTS = $(am_GhostscriptTest_OBJECTS)
GhostscriptTest_DEPENDENCIES = ../src/libdvisvgm.a \
	../libs/xxHash/libxxhash.a $(am__DEPENDENCIES_1)
am_GraphicsPathTest_OBJECTS = GraphicsPathTest.$(OBJEXT)
GraphicsPathTest_OBJECTS = $(am_GraphicsPathTest_OBJECTS)
GraphicsPathTest_DEPENDENCIES = ../src/libdvisvgm.a \
	../libs/xxHash/libxxhash.a $(am__DEPENDENCIES_1)
am_JFMReaderTest_OBJECTS = JFMReaderTest.$(OBJEXT)
JFMReaderTest_OBJECTS = $(am_JFMReaderTest_OBJECTS)
JFMReaderTest_DEPENDENCIES = ../src/libdvisvgm.a \
	../libs/xxHash/libxxhash.a $(am__DEPENDENCIES_1)
am_LengthTest_OBJECTS = LengthTest.$(OBJEXT)
LengthTest_OBJECTS = $(am_LengthTest_OBJECTS)
LengthTest_DEPENDENCIES = ../src/libdvisvgm.a \
	../libs/xxHash/libxxhash.a $(am__DEPENDENCIES_1)
am_MapLineTest_OBJECTS = MapLineTest.$(OBJEXT)
MapLineTest_OBJECTS = $(am_MapLineTest_OBJECTS)
MapLineTest_DEPENDENCIES = ../src/libdvisvgm.a \
	../libs/xxHash/libxxhash.a $(am__DEPENDENCIES_1)
am_MatrixTest_OBJECTS = MatrixTest.$(OBJEXT)
MatrixTest_OBJECTS = $(am_MatrixTest_OBJECTS)
MatrixTest_DEPENDENCIES = ../src/libdvisvgm.a \
	../libs/xxHash/libxxhash.a $(am__DEPENDENCIES_1)
am_MessageExceptionTest_OBJECTS = MessageExceptionTest.$(OBJEXT)
MessageExceptionTest_OBJECTS = $(am_MessageExceptionTest_OBJECTS)
MessageExceptionTest_DEPENDENCIES = ../src/libdvisvgm.a \
	../libs/xxHash/libxxhash.a $(am__DEPENDENCIES_1)
am_PSInterpreterTest_OBJECTS = PSInterpreterTest.$(OBJEXT)
PSInterpreterTest_OBJECTS = $(am_PSInterpreterTest_OBJECTS)
PSInterpreterTest_DEPENDENCIES = ../src/libdvisvgm.a \
	../libs/xxHash/libxxhash.a $(am__DEPENDENCIES_1)
am_PageRagesTest_OBJECTS = PageRagesTest.$(OBJEXT)
PageRagesTest_OBJECTS = $(am_PageRagesTest_OBJECTS)
PageRagesTest_DEPENDENCIES = ../src/libdvisvgm.a \
	../libs/xxHash/libxxhash.a $(am__DEPENDENCIES_1)
am_PageSizeTest_OBJECTS = PageSizeTest.$(OBJEXT)
PageSizeTest_OBJECTS = $(am_PageSizeTest_OBJECTS)
PageSizeTest_DEPENDENCIES = ../src/libdvisvgm.a \
	../libs/xxHash/libxxhash.a $(am__DEPENDENCIES_1)
am_PairTest_OBJECTS = PairTest.$(OBJEXT)
PairTest_OBJECTS = $(am_PairTest_OBJECTS)
PairTest_DEPENDENCIES = ../src/libdvisvgm.a ../libs/xxHash/libxxhash.a \
	$(am__DEPENDENCIES_1)
am_RangeMapTest_OBJECTS = RangeMapTest.$(OBJEXT)
RangeMapTest_OBJECTS = $(am_RangeMapTest_OBJECTS)
RangeMapTest_DEPENDENCIES = ../src/libdvisvgm.a \
	../libs/xxHash/libxxhash.a $(am__DEPENDENCIES_1)
am_SVGOutputTest_OBJECTS = SVGOutputTest.$(OBJEXT)
SVGOutputTest_OBJECTS = $(am_SVGOutputTest_OBJECTS)
SVGOutputTest_DEPENDENCIES = ../src/libdvisvgm.a \
	../libs/xxHash/libxxhash.a $(am__DEPENDENCIES_1)
am_ShadingPatchTest_OBJECTS = ShadingPatchTest.$(OBJEXT)
ShadingPatchTest_OBJECTS = $(am_ShadingPatchTest_OBJECTS)
ShadingPatchTest_DEPENDENCIES = ../src/libdvisvgm.a \
	../libs/xxHash/libxxhash.a $(am__DEPENDENCIES_1)
am_SplittedCharInputBufferTest_OBJECTS =  \
	SplittedCharInputBufferTest.$(OBJEXT)
SplittedCharInputBufferTest_OBJECTS =  \
	$(am_SplittedCharInputBufferTest_OBJECTS)
SplittedCharInputBufferTest_DEPENDENCIES = ../src/libdvisvgm.a \
	../libs/xxHash/libxxhash.a $(am__DEPENDENCIES_1)
am_StreamInputBufferTest_OBJECTS = StreamInputBufferTest.$(OBJEXT)
StreamInputBufferTest_OBJECTS = $(am_StreamInputBufferTest_OBJECTS)
StreamInputBufferTest_DEPENDENCIES = ../src/libdvisvgm.a \
	../libs/xxHash/libxxhash.a $(am__DEPENDENCIES_1)
am_StreamReaderTest_OBJECTS = StreamReaderTest.$(OBJEXT)
StreamReaderTest_OBJECTS = $(am_StreamReaderTest_OBJECTS)
StreamReaderTest_DEPENDENCIES = ../src/libdvisvgm.a \
	../libs/xxHash/libxxhash.a $(am__DEPENDENCIES_1)
am_StreamWriterTest_OBJECTS = StreamWriterTest.$(OBJEXT)
StreamWriterTest_OBJECTS = $(am_StreamWriterTest_OBJECTS)
StreamWriterTest_DEPENDENCIES = ../src/libdvisvgm.a \
	../libs/xxHash/libxxhash.a $(am__DEPENDENCIES_1)
am_SubfontTest_OBJECTS = SubfontTest.$(OBJEXT)
SubfontTest_OBJECTS = $(am_SubfontTest_OBJECTS)
SubfontTest_DEPENDENCIES = ../src/libdvisvgm.a \
	../libs/xxHash/libxxhash.a $(am__DEPENDENCIES_1)
am_TFMReaderTest_OBJECTS = TFMReaderTest.$(OBJEXT)
TFMReaderTest_OBJECTS = $(am_TFMReaderTest_OBJECTS)
TFMReaderTest_DEPENDENCIES = ../src/libdvisvgm.a \
	../libs/xxHash/libxxhash.a $(am__DEPENDENCIES_1)
am_TensorProductPatchTest_OBJECTS = TensorProductPatchTest.$(OBJEXT)
TensorProductPatchTest_OBJECTS = $(am_TensorProductPatchTest_OBJECTS)
TensorProductPatchTest_DEPENDENCIES = ../src/libdvisvgm.a \
	../libs/xxHash/libxxhash.a $(am__DEPENDENCIES_1)
am_ToUnicodeMapTest_OBJECTS = ToUnicodeMapTest.$(OBJEXT)
ToUnicodeMapTest_OBJECTS = $(am_ToUnicodeMapTest_OBJECTS)
ToUnicodeMapTest_DEPENDENCIES = ../src/libdvisvgm.a \
	../libs/xxHash/libxxhash.a $(am__DEPENDENCIES_1)
am_TriangularPatchTest_OBJECTS = TriangularPatchTest.$(OBJEXT)
TriangularPatchTest_OBJECTS = $(am_TriangularPatchTest_OBJECTS)
TriangularPatchTest_DEPENDENCIES = ../src/libdvisvgm.a \
	../libs/xxHash/libxxhash.a $(am__DEPENDENCIES_1)
am_UnicodeTest_OBJECTS = UnicodeTest.$(OBJEXT)
UnicodeTest_OBJECTS = $(am_UnicodeTest_OBJECTS)
UnicodeTest_DEPENDENCIES = ../src/libdvisvgm.a \
	../libs/xxHash/libxxhash.a $(am__DEPENDENCIES_1)
am_UtilityTest_OBJECTS = UtilityTest.$(OBJEXT)
UtilityTest_OBJECTS = $(am_UtilityTest_OBJECTS)
UtilityTest_DEPENDENCIES = ../src/libdvisvgm.a \
	../libs/xxHash/libxxhash.a $(am__DEPENDENCIES_1)
am_VectorIteratorTest_OBJECTS = VectorIteratorTest.$(OBJEXT)
VectorIteratorTest_OBJECTS = $(am_VectorIteratorTest_OBJECTS)
VectorIteratorTest_DEPENDENCIES = ../src/libdvisvgm.a \
	../libs/xxHash/libxxhash.a $(am__DEPENDENCIES_1)
am_VectorStreamTest_OBJECTS = VectorStreamTest.$(OBJEXT)
VectorStreamTest_OBJECTS = $(am_VectorStreamTest_OBJECTS)
VectorStreamTest_DEPENDENCIES = ../src/libdvisvgm.a \
	../libs/xxHash/libxxhash.a $(am__DEPENDENCIES_1)
am_XMLNodeTest_OBJECTS = XMLNodeTest.$(OBJEXT)
XMLNodeTest_OBJECTS = $(am_XMLNodeTest_OBJECTS)
XMLNodeTest_DEPENDENCIES = ../src/libdvisvgm.a \
	../libs/xxHash/libxxhash.a $(am__DEPENDENCIES_1)
am_XMLStringTest_OBJECTS = XMLStringTest.$(OBJEXT)
XMLStringTest_OBJECTS = $(am_XMLStringTest_OBJECTS)
XMLStringTest_DEPENDENCIES = ../src/libdvisvgm.a \
	../libs/xxHash/libxxhash.a $(am__DEPENDENCIES_1)
nodist_hashcheck_OBJECTS = hashcheck-hashcheck.$(OBJEXT)
hashcheck_OBJECTS = $(nodist_hashcheck_OBJECTS)
hashcheck_DEPENDENCIES = ../libs/xxHash/libxxhash.a
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
AM_V_lt = $(am__v_lt_@AM_V@)
am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
am__v_lt_0 = --silent
am__v_lt_1 = 
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_@AM_V@)
am__v_CXX_ = $(am__v_CXX_@AM_DEFAULT_V@)
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
AM_V_CXXLD = $(am__v_CXXLD_@AM_V@)
am__v_CXXLD_ = $(am__v_CXXLD_@AM_DEFAULT_V@)
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
SOURCES = $(BezierTest_SOURCES) $(BitmapTest_SOURCES) \
	$(BoundingBoxTest_SOURCES) $(CMapManagerTest_SOURCES) \
	$(CMapReaderTest_SOURCES) $(CMapTest_SOURCES) \
	$(CRC32Test_SOURCES) $(CalculatorTest_SOURCES) \
	$(ColorSpecialTest_SOURCES) $(ColorTest_SOURCES) \
	$(CommandLineTest_SOURCES) $(DependencyGraphTest_SOURCES) \
	$(DirectoryTest_SOURCES) $(DvisvgmSpecialTest_SOURCES) \
	$(EmSpecialTest_SOURCES) $(FileFinderTest_SOURCES) \
	$(FilePathTest_SOURCES) $(FileSystemTest_SOURCES) \
	$(FontManagerTest_SOURCES) $(FontMapTest_SOURCES) \
	$(GFGlyphTracerTest_SOURCES) $(GFReaderTest_SOURCES) \
	$(GhostscriptTest_SOURCES) $(GraphicsPathTest_SOURCES) \
	$(JFMReaderTest_SOURCES) $(LengthTest_SOURCES) \
	$(MapLineTest_SOURCES) $(MatrixTest_SOURCES) \
	$(MessageExceptionTest_SOURCES) $(PSInterpreterTest_SOURCES) \
	$(PageRagesTest_SOURCES) $(PageSizeTest_SOURCES) \
	$(PairTest_SOURCES) $(RangeMapTest_SOURCES) \
	$(SVGOutputTest_SOURCES) $(ShadingPatchTest_SOURCES) \
	$(SplittedCharInputBufferTest_SOURCES) \
	$(StreamInputBufferTest_SOURCES) $(StreamReaderTest_SOURCES) \
	$(StreamWriterTest_SOURCES) $(SubfontTest_SOURCES) \
	$(TFMReaderTest_SOURCES) $(TensorProductPatchTest_SOURCES) \
	$(ToUnicodeMapTest_SOURCES) $(TriangularPatchTest_SOURCES) \
	$(UnicodeTest_SOURCES) $(UtilityTest_SOURCES) \
	$(VectorIteratorTest_SOURCES) $(VectorStreamTest_SOURCES) \
	$(XMLNodeTest_SOURCES) $(XMLStringTest_SOURCES) \
	$(nodist_hashcheck_SOURCES)
DIST_SOURCES = $(BezierTest_SOURCES) $(BitmapTest_SOURCES) \
	$(BoundingBoxTest_SOURCES) $(CMapManagerTest_SOURCES) \
	$(CMapReaderTest_SOURCES) $(CMapTest_SOURCES) \
	$(CRC32Test_SOURCES) $(CalculatorTest_SOURCES) \
	$(ColorSpecialTest_SOURCES) $(ColorTest_SOURCES) \
	$(CommandLineTest_SOURCES) $(DependencyGraphTest_SOURCES) \
	$(DirectoryTest_SOURCES) $(DvisvgmSpecialTest_SOURCES) \
	$(EmSpecialTest_SOURCES) $(FileFinderTest_SOURCES) \
	$(FilePathTest_SOURCES) $(FileSystemTest_SOURCES) \
	$(FontManagerTest_SOURCES) $(FontMapTest_SOURCES) \
	$(GFGlyphTracerTest_SOURCES) $(GFReaderTest_SOURCES) \
	$(GhostscriptTest_SOURCES) $(GraphicsPathTest_SOURCES) \
	$(JFMReaderTest_SOURCES) $(LengthTest_SOURCES) \
	$(MapLineTest_SOURCES) $(MatrixTest_SOURCES) \
	$(MessageExceptionTest_SOURCES) $(PSInterpreterTest_SOURCES) \
	$(PageRagesTest_SOURCES) $(PageSizeTest_SOURCES) \
	$(PairTest_SOURCES) $(RangeMapTest_SOURCES) \
	$(SVGOutputTest_SOURCES) $(ShadingPatchTest_SOURCES) \
	$(SplittedCharInputBufferTest_SOURCES) \
	$(StreamInputBufferTest_SOURCES) $(StreamReaderTest_SOURCES) \
	$(StreamWriterTest_SOURCES) $(SubfontTest_SOURCES) \
	$(TFMReaderTest_SOURCES) $(TensorProductPatchTest_SOURCES) \
	$(ToUnicodeMapTest_SOURCES) $(TriangularPatchTest_SOURCES) \
	$(UnicodeTest_SOURCES) $(UtilityTest_SOURCES) \
	$(VectorIteratorTest_SOURCES) $(VectorStreamTest_SOURCES) \
	$(XMLNodeTest_SOURCES) $(XMLStringTest_SOURCES)
RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \
	ctags-recursive dvi-recursive html-recursive info-recursive \
	install-data-recursive install-dvi-recursive \
	install-exec-recursive install-html-recursive \
	install-info-recursive install-pdf-recursive \
	install-ps-recursive install-recursive installcheck-recursive \
	installdirs-recursive pdf-recursive ps-recursive \
	tags-recursive uninstall-recursive
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
am__recursive_targets = \
  $(RECURSIVE_TARGETS) \
  $(RECURSIVE_CLEAN_TARGETS) \
  $(am__extra_recursive_targets)
AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \
	check recheck distdir
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__tty_colors_dummy = \
  mgn= red= grn= lgn= blu= brg= std=; \
  am__color_tests=no
am__tty_colors = { \
  $(am__tty_colors_dummy); \
  if test "X$(AM_COLOR_TESTS)" = Xno; then \
    am__color_tests=no; \
  elif test "X$(AM_COLOR_TESTS)" = Xalways; then \
    am__color_tests=yes; \
  elif test "X$$TERM" != Xdumb && { test -t 1; } 2>/dev/null; then \
    am__color_tests=yes; \
  fi; \
  if test $$am__color_tests = yes; then \
    red='[0;31m'; \
    grn='[0;32m'; \
    lgn='[1;32m'; \
    blu='[1;34m'; \
    mgn='[0;35m'; \
    brg='[1m'; \
    std='[m'; \
  fi; \
}
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__recheck_rx = ^[ 	]*:recheck:[ 	]*
am__global_test_result_rx = ^[ 	]*:global-test-result:[ 	]*
am__copy_in_global_log_rx = ^[ 	]*:copy-in-global-log:[ 	]*
# A command that, given a newline-separated list of test names on the
# standard input, print the name of the tests that are to be re-run
# upon "make recheck".
am__list_recheck_tests = $(AWK) '{ \
  recheck = 1; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
        { \
          if ((getline line2 < ($$0 ".log")) < 0) \
	    recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[nN][Oo]/) \
        { \
          recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[yY][eE][sS]/) \
        { \
          break; \
        } \
    }; \
  if (recheck) \
    print $$0; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# A command that, given a newline-separated list of test names on the
# standard input, create the global log from their .trs and .log files.
am__create_global_log = $(AWK) ' \
function fatal(msg) \
{ \
  print "fatal: making $@: " msg | "cat >&2"; \
  exit 1; \
} \
function rst_section(header) \
{ \
  print header; \
  len = length(header); \
  for (i = 1; i <= len; i = i + 1) \
    printf "="; \
  printf "\n\n"; \
} \
{ \
  copy_in_global_log = 1; \
  global_test_result = "RUN"; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
         fatal("failed to read from " $$0 ".trs"); \
      if (line ~ /$(am__global_test_result_rx)/) \
        { \
          sub("$(am__global_test_result_rx)", "", line); \
          sub("[ 	]*$$", "", line); \
          global_test_result = line; \
        } \
      else if (line ~ /$(am__copy_in_global_log_rx)[nN][oO]/) \
        copy_in_global_log = 0; \
    }; \
  if (copy_in_global_log) \
    { \
      rst_section(global_test_result ": " $$0); \
      while ((rc = (getline line < ($$0 ".log"))) != 0) \
      { \
        if (rc < 0) \
          fatal("failed to read from " $$0 ".log"); \
        print line; \
      }; \
      printf "\n"; \
    }; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# Restructured Text title.
am__rst_title = { sed 's/.*/   &   /;h;s/./=/g;p;x;s/ *$$//;p;g' && echo; }
# Solaris 10 'make', and several other traditional 'make' implementations,
# pass "-e" to $(SHELL), and POSIX 2008 even requires this.  Work around it
# by disabling -e (using the XSI extension "set +e") if it's set.
am__sh_e_setup = case $$- in *e*) set +e;; esac
# Default flags passed to test drivers.
am__common_driver_flags = \
  --color-tests "$$am__color_tests" \
  --enable-hard-errors "$$am__enable_hard_errors" \
  --expect-failure "$$am__expect_failure"
# To be inserted before the command running the test.  Creates the
# directory for the log if needed.  Stores in $dir the directory
# containing $f, in $tst the test, in $log the log.  Executes the
# developer- defined test setup AM_TESTS_ENVIRONMENT (if any), and
# passes TESTS_ENVIRONMENT.  Set up options for the wrapper that
# will run the test scripts (or their associated LOG_COMPILER, if
# thy have one).
am__check_pre = \
$(am__sh_e_setup);					\
$(am__vpath_adj_setup) $(am__vpath_adj)			\
$(am__tty_colors);					\
srcdir=$(srcdir); export srcdir;			\
case "$@" in						\
  */*) am__odir=`echo "./$@" | sed 's|/[^/]*$$||'`;;	\
    *) am__odir=.;; 					\
esac;							\
test "x$$am__odir" = x"." || test -d "$$am__odir" 	\
  || $(MKDIR_P) "$$am__odir" || exit $$?;		\
if test -f "./$$f"; then dir=./;			\
elif test -f "$$f"; then dir=;				\
else dir="$(srcdir)/"; fi;				\
tst=$$dir$$f; log='$@'; 				\
if test -n '$(DISABLE_HARD_ERRORS)'; then		\
  am__enable_hard_errors=no; 				\
else							\
  am__enable_hard_errors=yes; 				\
fi; 							\
case " $(XFAIL_TESTS) " in				\
  *[\ \	]$$f[\ \	]* | *[\ \	]$$dir$$f[\ \	]*) \
    am__expect_failure=yes;;				\
  *)							\
    am__expect_failure=no;;				\
esac; 							\
$(AM_TESTS_ENVIRONMENT) $(TESTS_ENVIRONMENT)
# A shell command to get the names of the tests scripts with any registered
# extension removed (i.e., equivalently, the names of the test logs, with
# the '.log' extension removed).  The result is saved in the shell variable
# '$bases'.  This honors runtime overriding of TESTS and TEST_LOGS.  Sadly,
# we cannot use something simpler, involving e.g., "$(TEST_LOGS:.log=)",
# since that might cause problem with VPATH rewrites for suffix-less tests.
# See also 'test-harness-vpath-rewrite.sh' and 'test-trs-basic.sh'.
am__set_TESTS_bases = \
  bases='$(TEST_LOGS)'; \
  bases=`for i in $$bases; do echo $$i; done | sed 's/\.log$$//'`; \
  bases=`echo $$bases`
RECHECK_LOGS = $(TEST_LOGS)
TEST_SUITE_LOG = test-suite.log
TEST_EXTENSIONS = @EXEEXT@ .test
LOG_DRIVER = $(SHELL) $(top_srcdir)/test-driver
LOG_COMPILE = $(LOG_COMPILER) $(AM_LOG_FLAGS) $(LOG_FLAGS)
am__set_b = \
  case '$@' in \
    */*) \
      case '$*' in \
        */*) b='$*';; \
          *) b=`echo '$@' | sed 's/\.log$$//'`; \
       esac;; \
    *) \
      b='$*';; \
  esac
am__test_logs1 = $(TESTS:=.log)
am__test_logs2 = $(am__test_logs1:@EXEEXT@.log=.log)
TEST_LOGS = $(am__test_logs2:.test.log=.log)
TEST_LOG_DRIVER = $(SHELL) $(top_srcdir)/test-driver
TEST_LOG_COMPILE = $(TEST_LOG_COMPILER) $(AM_TEST_LOG_FLAGS) \
	$(TEST_LOG_FLAGS)
DIST_SUBDIRS = $(SUBDIRS)
am__DIST_COMMON = $(srcdir)/Makefile.in $(top_srcdir)/depcomp \
	$(top_srcdir)/test-driver
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
am__relativize = \
  dir0=`pwd`; \
  sed_first='s,^\([^/]*\)/.*$$,\1,'; \
  sed_rest='s,^[^/]*/*,,'; \
  sed_last='s,^.*/\([^/]*\)$$,\1,'; \
  sed_butlast='s,/*[^/]*$$,,'; \
  while test -n "$$dir1"; do \
    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
    if test "$$first" != "."; then \
      if test "$$first" = ".."; then \
        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
      else \
        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
        if test "$$first2" = "$$first"; then \
          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
        else \
          dir2="../$$dir2"; \
        fi; \
        dir0="$$dir0"/"$$first"; \
      fi; \
    fi; \
    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
  done; \
  reldir="$$dir2"
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AM_CPPFLAGS = @AM_CPPFLAGS@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AM_LDFLAGS = @AM_LDFLAGS@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CODE_COVERAGE_CFLAGS = @CODE_COVERAGE_CFLAGS@
CODE_COVERAGE_CPPFLAGS = @CODE_COVERAGE_CPPFLAGS@
CODE_COVERAGE_ENABLED = @CODE_COVERAGE_ENABLED@
CODE_COVERAGE_LDFLAGS = @CODE_COVERAGE_LDFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DATE = @DATE@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
FREETYPE_CFLAGS = @FREETYPE_CFLAGS@
FREETYPE_LIBS = @FREETYPE_LIBS@
GCOV = @GCOV@
GENHTML = @GENHTML@
GREP = @GREP@
HAVE_CXX11 = @HAVE_CXX11@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LCOV = @LCOV@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MKDIR_P = @MKDIR_P@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PKG_CONFIG = @PKG_CONFIG@
PKG_CONFIG_LIBDIR = @PKG_CONFIG_LIBDIR@
PKG_CONFIG_PATH = @PKG_CONFIG_PATH@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
ZLIB_CFLAGS = @ZLIB_CFLAGS@
ZLIB_LIBS = @ZLIB_LIBS@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target = @target@
target_alias = @target_alias@
target_cpu = @target_cpu@
target_os = @target_os@
target_vendor = @target_vendor@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
SUBDIRS = data
AM_CXXFLAGS = -I$(top_srcdir)/src -Wall -DSRCDIR='"$(srcdir)"' $(CODE_COVERAGE_CFLAGS)
nodist_hashcheck_SOURCES = hashcheck.cpp
hashcheck_LDADD = ../libs/xxHash/libxxhash.a
hashcheck_CPPFLAGS = -I$(top_srcdir)/libs/xxHash
BezierTest_SOURCES = BezierTest.cpp
BezierTest_LDADD = ../src/libdvisvgm.a ../libs/xxHash/libxxhash.a -L../potracelib -lpotrace -lfreetype -lgtest -lgtest_main -lpthread $(CODE_COVERAGE_LDFLAGS)
BitmapTest_SOURCES = BitmapTest.cpp
BitmapTest_LDADD = ../src/libdvisvgm.a ../libs/xxHash/libxxhash.a -L../potracelib -lpotrace -lfreetype -lgtest -lgtest_main -lpthread $(CODE_COVERAGE_LDFLAGS)
BoundingBoxTest_SOURCES = BoundingBoxTest.cpp
BoundingBoxTest_LDADD = ../src/libdvisvgm.a ../libs/xxHash/libxxhash.a -L../potracelib -lpotrace -lfreetype -lgtest -lgtest_main -lpthread $(CODE_COVERAGE_LDFLAGS)
CalculatorTest_SOURCES = CalculatorTest.cpp
CalculatorTest_LDADD = ../src/libdvisvgm.a ../libs/xxHash/libxxhash.a -L../potracelib -lpotrace -lfreetype -lgtest -lgtest_main -lpthread $(CODE_COVERAGE_LDFLAGS)
CMapManagerTest_SOURCES = CMapManagerTest.cpp
CMapManagerTest_LDADD = ../src/libdvisvgm.a ../libs/xxHash/libxxhash.a -L../potracelib -lpotrace -lfreetype -lgtest -lgtest_main -lpthread $(CODE_COVERAGE_LDFLAGS)
CMapReaderTest_SOURCES = CMapReaderTest.cpp
CMapReaderTest_LDADD = ../src/libdvisvgm.a ../libs/xxHash/libxxhash.a -L../potracelib -lpotrace -lfreetype -lgtest -lgtest_main -lpthread $(CODE_COVERAGE_LDFLAGS)
CMapTest_SOURCES = CMapTest.cpp
CMapTest_LDADD = ../src/libdvisvgm.a ../libs/xxHash/libxxhash.a -L../potracelib -lpotrace -lfreetype -lgtest -lgtest_main -lpthread $(CODE_COVERAGE_LDFLAGS)
ColorSpecialTest_SOURCES = ColorSpecialTest.cpp
ColorSpecialTest_LDADD = ../src/libdvisvgm.a ../libs/xxHash/libxxhash.a -L../potracelib -lpotrace -lfreetype -lgtest -lgtest_main -lpthread $(CODE_COVERAGE_LDFLAGS)
ColorTest_SOURCES = ColorTest.cpp
ColorTest_LDADD = ../src/libdvisvgm.a ../libs/xxHash/libxxhash.a -L../potracelib -lpotrace -lfreetype -lgtest -lgtest_main -lpthread $(CODE_COVERAGE_LDFLAGS)
CommandLineTest_SOURCES = CommandLineTest.cpp
CommandLineTest_LDADD = ../src/libdvisvgm.a ../libs/xxHash/libxxhash.a -L../potracelib -lpotrace -lfreetype -lgtest -lgtest_main -lpthread $(CODE_COVERAGE_LDFLAGS)
CRC32Test_SOURCES = CRC32Test.cpp
CRC32Test_LDADD = ../src/libdvisvgm.a ../libs/xxHash/libxxhash.a -L../potracelib -lpotrace -lfreetype -lgtest -lgtest_main -lpthread $(CODE_COVERAGE_LDFLAGS)
DependencyGraphTest_SOURCES = DependencyGraphTest.cpp
DependencyGraphTest_LDADD = ../src/libdvisvgm.a ../libs/xxHash/libxxhash.a -L../potracelib -lpotrace -lfreetype -lgtest -lgtest_main -lpthread $(CODE_COVERAGE_LDFLAGS)
DirectoryTest_SOURCES = DirectoryTest.cpp
DirectoryTest_LDADD = ../src/libdvisvgm.a ../libs/xxHash/libxxhash.a -L../potracelib -lpotrace -lfreetype -lgtest -lgtest_main -lpthread $(CODE_COVERAGE_LDFLAGS)
DvisvgmSpecialTest_SOURCES = DvisvgmSpecialTest.cpp
DvisvgmSpecialTest_LDADD = ../src/libdvisvgm.a ../libs/xxHash/libxxhash.a -L../potracelib -lpotrace -lfreetype -lgtest -lgtest_main -lpthread $(CODE_COVERAGE_LDFLAGS)
EmSpecialTest_SOURCES = EmSpecialTest.cpp
EmSpecialTest_LDADD = ../src/libdvisvgm.a ../libs/xxHash/libxxhash.a -L../potracelib -lpotrace -lfreetype -lgtest -lgtest_main -lpthread $(CODE_COVERAGE_LDFLAGS)
FileFinderTest_SOURCES = FileFinderTest.cpp
FileFinderTest_LDADD = ../src/libdvisvgm.a ../libs/xxHash/libxxhash.a -L../potracelib -lpotrace -lfreetype -lgtest -lgtest_main -lpthread $(CODE_COVERAGE_LDFLAGS)
FilePathTest_SOURCES = FilePathTest.cpp
FilePathTest_LDADD = ../src/libdvisvgm.a ../libs/xxHash/libxxhash.a -L../potracelib -lpotrace -lfreetype -lgtest -lgtest_main -lpthread $(CODE_COVERAGE_LDFLAGS)
FileSystemTest_SOURCES = FileSystemTest.cpp
FileSystemTest_LDADD = ../src/libdvisvgm.a ../libs/xxHash/libxxhash.a -L../potracelib -lpotrace -lfreetype -lgtest -lgtest_main -lpthread $(CODE_COVERAGE_LDFLAGS)
FontManagerTest_SOURCES = FontManagerTest.cpp
FontManagerTest_LDADD = ../src/libdvisvgm.a ../libs/xxHash/libxxhash.a -L../potracelib -lpotrace -lfreetype -lgtest -lgtest_main -lpthread $(CODE_COVERAGE_LDFLAGS)
FontMapTest_SOURCES = FontMapTest.cpp
FontMapTest_LDADD = ../src/libdvisvgm.a ../libs/xxHash/libxxhash.a -L../potracelib -lpotrace -lfreetype -lgtest -lgtest_main -lpthread $(CODE_COVERAGE_LDFLAGS)
GFGlyphTracerTest_SOURCES = GFGlyphTracerTest.cpp
GFGlyphTracerTest_LDADD = ../src/libdvisvgm.a ../libs/xxHash/libxxhash.a -L../potracelib -lpotrace -lfreetype -lgtest -lgtest_main -lpthread $(CODE_COVERAGE_LDFLAGS)
GFReaderTest_SOURCES = GFReaderTest.cpp
GFReaderTest_LDADD = ../src/libdvisvgm.a ../libs/xxHash/libxxhash.a -L../potracelib -lpotrace -lfreetype -lgtest -lgtest_main -lpthread $(CODE_COVERAGE_LDFLAGS)
GhostscriptTest_SOURCES = GhostscriptTest.cpp
GhostscriptTest_LDADD = ../src/libdvisvgm.a ../libs/xxHash/libxxhash.a -L../potracelib -lpotrace -lfreetype -lgtest -lgtest_main -lpthread $(CODE_COVERAGE_LDFLAGS)
GraphicsPathTest_SOURCES = GraphicsPathTest.cpp
GraphicsPathTest_LDADD = ../src/libdvisvgm.a ../libs/xxHash/libxxhash.a -L../potracelib -lpotrace -lfreetype -lgtest -lgtest_main -lpthread $(CODE_COVERAGE_LDFLAGS)
JFMReaderTest_SOURCES = JFMReaderTest.cpp
JFMReaderTest_LDADD = ../src/libdvisvgm.a ../libs/xxHash/libxxhash.a -L../potracelib -lpotrace -lfreetype -lgtest -lgtest_main -lpthread $(CODE_COVERAGE_LDFLAGS)
LengthTest_SOURCES = LengthTest.cpp
LengthTest_LDADD = ../src/libdvisvgm.a ../libs/xxHash/libxxhash.a -L../potracelib -lpotrace -lfreetype -lgtest -lgtest_main -lpthread $(CODE_COVERAGE_LDFLAGS)
MapLineTest_SOURCES = MapLineTest.cpp
MapLineTest_LDADD = ../src/libdvisvgm.a ../libs/xxHash/libxxhash.a -L../potracelib -lpotrace -lfreetype -lgtest -lgtest_main -lpthread $(CODE_COVERAGE_LDFLAGS)
MatrixTest_SOURCES = MatrixTest.cpp
MatrixTest_LDADD = ../src/libdvisvgm.a ../libs/xxHash/libxxhash.a -L../potracelib -lpotrace -lfreetype -lgtest -lgtest_main -lpthread $(CODE_COVERAGE_LDFLAGS)
MessageExceptionTest_SOURCES = MessageExceptionTest.cpp
MessageExceptionTest_LDADD = ../src/libdvisvgm.a ../libs/xxHash/libxxhash.a -L../potracelib -lpotrace -lfreetype -lgtest -lgtest_main -lpthread $(CODE_COVERAGE_LDFLAGS)
PageRagesTest_SOURCES = PageRagesTest.cpp
PageRagesTest_LDADD = ../src/libdvisvgm.a ../libs/xxHash/libxxhash.a -L../potracelib -lpotrace -lfreetype -lgtest -lgtest_main -lpthread $(CODE_COVERAGE_LDFLAGS)
PageSizeTest_SOURCES = PageSizeTest.cpp
PageSizeTest_LDADD = ../src/libdvisvgm.a ../libs/xxHash/libxxhash.a -L../potracelib -lpotrace -lfreetype -lgtest -lgtest_main -lpthread $(CODE_COVERAGE_LDFLAGS)
PairTest_SOURCES = PairTest.cpp
PairTest_LDADD = ../src/libdvisvgm.a ../libs/xxHash/libxxhash.a -L../potracelib -lpotrace -lfreetype -lgtest -lgtest_main -lpthread $(CODE_COVERAGE_LDFLAGS)
PSInterpreterTest_SOURCES = PSInterpreterTest.cpp
PSInterpreterTest_LDADD = ../src/libdvisvgm.a ../libs/xxHash/libxxhash.a -L../potracelib -lpotrace -lfreetype -lgtest -lgtest_main -lpthread $(CODE_COVERAGE_LDFLAGS)
RangeMapTest_SOURCES = RangeMapTest.cpp
RangeMapTest_LDADD = ../src/libdvisvgm.a ../libs/xxHash/libxxhash.a -L../potracelib -lpotrace -lfreetype -lgtest -lgtest_main -lpthread $(CODE_COVERAGE_LDFLAGS)
ShadingPatchTest_SOURCES = ShadingPatchTest.cpp
ShadingPatchTest_LDADD = ../src/libdvisvgm.a ../libs/xxHash/libxxhash.a -L../potracelib -lpotrace -lfreetype -lgtest -lgtest_main -lpthread $(CODE_COVERAGE_LDFLAGS)
SplittedCharInputBufferTest_SOURCES = SplittedCharInputBufferTest.cpp
SplittedCharInputBufferTest_LDADD = ../src/libdvisvgm.a ../libs/xxHash/libxxhash.a -L../potracelib -lpotrace -lfreetype -lgtest -lgtest_main -lpthread $(CODE_COVERAGE_LDFLAGS)
StreamInputBufferTest_SOURCES = StreamInputBufferTest.cpp
StreamInputBufferTest_LDADD = ../src/libdvisvgm.a ../libs/xxHash/libxxhash.a -L../potracelib -lpotrace -lfreetype -lgtest -lgtest_main -lpthread $(CODE_COVERAGE_LDFLAGS)
StreamReaderTest_SOURCES = StreamReaderTest.cpp
StreamReaderTest_LDADD = ../src/libdvisvgm.a ../libs/xxHash/libxxhash.a -L../potracelib -lpotrace -lfreetype -lgtest -lgtest_main -lpthread $(CODE_COVERAGE_LDFLAGS)
StreamWriterTest_SOURCES = StreamWriterTest.cpp
StreamWriterTest_LDADD = ../src/libdvisvgm.a ../libs/xxHash/libxxhash.a -L../potracelib -lpotrace -lfreetype -lgtest -lgtest_main -lpthread $(CODE_COVERAGE_LDFLAGS)
SubfontTest_SOURCES = SubfontTest.cpp
SubfontTest_LDADD = ../src/libdvisvgm.a ../libs/xxHash/libxxhash.a -L../potracelib -lpotrace -lfreetype -lgtest -lgtest_main -lpthread $(CODE_COVERAGE_LDFLAGS)
SVGOutputTest_SOURCES = SVGOutputTest.cpp
SVGOutputTest_LDADD = ../src/libdvisvgm.a ../libs/xxHash/libxxhash.a -L../potracelib -lpotrace -lfreetype -lgtest -lgtest_main -lpthread $(CODE_COVERAGE_LDFLAGS)
TensorProductPatchTest_SOURCES = TensorProductPatchTest.cpp
TensorProductPatchTest_LDADD = ../src/libdvisvgm.a ../libs/xxHash/libxxhash.a -L../potracelib -lpotrace -lfreetype -lgtest -lgtest_main -lpthread $(CODE_COVERAGE_LDFLAGS)
TFMReaderTest_SOURCES = TFMReaderTest.cpp
TFMReaderTest_LDADD = ../src/libdvisvgm.a ../libs/xxHash/libxxhash.a -L../potracelib -lpotrace -lfreetype -lgtest -lgtest_main -lpthread $(CODE_COVERAGE_LDFLAGS)
ToUnicodeMapTest_SOURCES = ToUnicodeMapTest.cpp
ToUnicodeMapTest_LDADD = ../src/libdvisvgm.a ../libs/xxHash/libxxhash.a -L../potracelib -lpotrace -lfreetype -lgtest -lgtest_main -lpthread $(CODE_COVERAGE_LDFLAGS)
TriangularPatchTest_SOURCES = TriangularPatchTest.cpp
TriangularPatchTest_LDADD = ../src/libdvisvgm.a ../libs/xxHash/libxxhash.a -L../potracelib -lpotrace -lfreetype -lgtest -lgtest_main -lpthread $(CODE_COVERAGE_LDFLAGS)
UnicodeTest_SOURCES = UnicodeTest.cpp
UnicodeTest_LDADD = ../src/libdvisvgm.a ../libs/xxHash/libxxhash.a -L../potracelib -lpotrace -lfreetype -lgtest -lgtest_main -lpthread $(CODE_COVERAGE_LDFLAGS)
UtilityTest_SOURCES = UtilityTest.cpp
UtilityTest_LDADD = ../src/libdvisvgm.a ../libs/xxHash/libxxhash.a -L../potracelib -lpotrace -lfreetype -lgtest -lgtest_main -lpthread $(CODE_COVERAGE_LDFLAGS)
VectorIteratorTest_SOURCES = VectorIteratorTest.cpp
VectorIteratorTest_LDADD = ../src/libdvisvgm.a ../libs/xxHash/libxxhash.a -L../potracelib -lpotrace -lfreetype -lgtest -lgtest_main -lpthread $(CODE_COVERAGE_LDFLAGS)
VectorStreamTest_SOURCES = VectorStreamTest.cpp
VectorStreamTest_LDADD = ../src/libdvisvgm.a ../libs/xxHash/libxxhash.a -L../potracelib -lpotrace -lfreetype -lgtest -lgtest_main -lpthread $(CODE_COVERAGE_LDFLAGS)
XMLNodeTest_SOURCES = XMLNodeTest.cpp
XMLNodeTest_LDADD = ../src/libdvisvgm.a ../libs/xxHash/libxxhash.a -L../potracelib -lpotrace -lfreetype -lgtest -lgtest_main -lpthread $(CODE_COVERAGE_LDFLAGS)
XMLStringTest_SOURCES = XMLStringTest.cpp
XMLStringTest_LDADD = ../src/libdvisvgm.a ../libs/xxHash/libxxhash.a -L../potracelib -lpotrace -lfreetype -lgtest -lgtest_main -lpthread $(CODE_COVERAGE_LDFLAGS)
EXTRA_DIST = check-conv genhashcheck.py normalize.xsl
CLEANFILES = *.gcda *.gcno hashcheck.cpp
all: all-recursive

.SUFFIXES:
.SUFFIXES: .cpp .log .o .obj .test .test$(EXEEXT) .trs
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu tests/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu tests/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-checkPROGRAMS:
	-test -z "$(check_PROGRAMS)" || rm -f $(check_PROGRAMS)

BezierTest$(EXEEXT): $(BezierTest_OBJECTS) $(BezierTest_DEPENDENCIES) $(EXTRA_BezierTest_DEPENDENCIES) 
	@rm -f BezierTest$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(BezierTest_OBJECTS) $(BezierTest_LDADD) $(LIBS)

BitmapTest$(EXEEXT): $(BitmapTest_OBJECTS) $(BitmapTest_DEPENDENCIES) $(EXTRA_BitmapTest_DEPENDENCIES) 
	@rm -f BitmapTest$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(BitmapTest_OBJECTS) $(BitmapTest_LDADD) $(LIBS)

BoundingBoxTest$(EXEEXT): $(BoundingBoxTest_OBJECTS) $(BoundingBoxTest_DEPENDENCIES) $(EXTRA_BoundingBoxTest_DEPENDENCIES) 
	@rm -f BoundingBoxTest$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(BoundingBoxTest_OBJECTS) $(BoundingBoxTest_LDADD) $(LIBS)

CMapManagerTest$(EXEEXT): $(CMapManagerTest_OBJECTS) $(CMapManagerTest_DEPENDENCIES) $(EXTRA_CMapManagerTest_DEPENDENCIES) 
	@rm -f CMapManagerTest$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(CMapManagerTest_OBJECTS) $(CMapManagerTest_LDADD) $(LIBS)

CMapReaderTest$(EXEEXT): $(CMapReaderTest_OBJECTS) $(CMapReaderTest_DEPENDENCIES) $(EXTRA_CMapReaderTest_DEPENDENCIES) 
	@rm -f CMapReaderTest$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(CMapReaderTest_OBJECTS) $(CMapReaderTest_LDADD) $(LIBS)

CMapTest$(EXEEXT): $(CMapTest_OBJECTS) $(CMapTest_DEPENDENCIES) $(EXTRA_CMapTest_DEPENDENCIES) 
	@rm -f CMapTest$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(CMapTest_OBJECTS) $(CMapTest_LDADD) $(LIBS)

CRC32Test$(EXEEXT): $(CRC32Test_OBJECTS) $(CRC32Test_DEPENDENCIES) $(EXTRA_CRC32Test_DEPENDENCIES) 
	@rm -f CRC32Test$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(CRC32Test_OBJECTS) $(CRC32Test_LDADD) $(LIBS)

CalculatorTest$(EXEEXT): $(CalculatorTest_OBJECTS) $(CalculatorTest_DEPENDENCIES) $(EXTRA_CalculatorTest_DEPENDENCIES) 
	@rm -f CalculatorTest$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(CalculatorTest_OBJECTS) $(CalculatorTest_LDADD) $(LIBS)

ColorSpecialTest$(EXEEXT): $(ColorSpecialTest_OBJECTS) $(ColorSpecialTest_DEPENDENCIES) $(EXTRA_ColorSpecialTest_DEPENDENCIES) 
	@rm -f ColorSpecialTest$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(ColorSpecialTest_OBJECTS) $(ColorSpecialTest_LDADD) $(LIBS)

ColorTest$(EXEEXT): $(ColorTest_OBJECTS) $(ColorTest_DEPENDENCIES) $(EXTRA_ColorTest_DEPENDENCIES) 
	@rm -f ColorTest$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(ColorTest_OBJECTS) $(ColorTest_LDADD) $(LIBS)

CommandLineTest$(EXEEXT): $(CommandLineTest_OBJECTS) $(CommandLineTest_DEPENDENCIES) $(EXTRA_CommandLineTest_DEPENDENCIES) 
	@rm -f CommandLineTest$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(CommandLineTest_OBJECTS) $(CommandLineTest_LDADD) $(LIBS)

DependencyGraphTest$(EXEEXT): $(DependencyGraphTest_OBJECTS) $(DependencyGraphTest_DEPENDENCIES) $(EXTRA_DependencyGraphTest_DEPENDENCIES) 
	@rm -f DependencyGraphTest$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(DependencyGraphTest_OBJECTS) $(DependencyGraphTest_LDADD) $(LIBS)

DirectoryTest$(EXEEXT): $(DirectoryTest_OBJECTS) $(DirectoryTest_DEPENDENCIES) $(EXTRA_DirectoryTest_DEPENDENCIES) 
	@rm -f DirectoryTest$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(DirectoryTest_OBJECTS) $(DirectoryTest_LDADD) $(LIBS)

DvisvgmSpecialTest$(EXEEXT): $(DvisvgmSpecialTest_OBJECTS) $(DvisvgmSpecialTest_DEPENDENCIES) $(EXTRA_DvisvgmSpecialTest_DEPENDENCIES) 
	@rm -f DvisvgmSpecialTest$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(DvisvgmSpecialTest_OBJECTS) $(DvisvgmSpecialTest_LDADD) $(LIBS)

EmSpecialTest$(EXEEXT): $(EmSpecialTest_OBJECTS) $(EmSpecialTest_DEPENDENCIES) $(EXTRA_EmSpecialTest_DEPENDENCIES) 
	@rm -f EmSpecialTest$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(EmSpecialTest_OBJECTS) $(EmSpecialTest_LDADD) $(LIBS)

FileFinderTest$(EXEEXT): $(FileFinderTest_OBJECTS) $(FileFinderTest_DEPENDENCIES) $(EXTRA_FileFinderTest_DEPENDENCIES) 
	@rm -f FileFinderTest$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(FileFinderTest_OBJECTS) $(FileFinderTest_LDADD) $(LIBS)

FilePathTest$(EXEEXT): $(FilePathTest_OBJECTS) $(FilePathTest_DEPENDENCIES) $(EXTRA_FilePathTest_DEPENDENCIES) 
	@rm -f FilePathTest$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(FilePathTest_OBJECTS) $(FilePathTest_LDADD) $(LIBS)

FileSystemTest$(EXEEXT): $(FileSystemTest_OBJECTS) $(FileSystemTest_DEPENDENCIES) $(EXTRA_FileSystemTest_DEPENDENCIES) 
	@rm -f FileSystemTest$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(FileSystemTest_OBJECTS) $(FileSystemTest_LDADD) $(LIBS)

FontManagerTest$(EXEEXT): $(FontManagerTest_OBJECTS) $(FontManagerTest_DEPENDENCIES) $(EXTRA_FontManagerTest_DEPENDENCIES) 
	@rm -f FontManagerTest$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(FontManagerTest_OBJECTS) $(FontManagerTest_LDADD) $(LIBS)

FontMapTest$(EXEEXT): $(FontMapTest_OBJECTS) $(FontMapTest_DEPENDENCIES) $(EXTRA_FontMapTest_DEPENDENCIES) 
	@rm -f FontMapTest$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(FontMapTest_OBJECTS) $(FontMapTest_LDADD) $(LIBS)

GFGlyphTracerTest$(EXEEXT): $(GFGlyphTracerTest_OBJECTS) $(GFGlyphTracerTest_DEPENDENCIES) $(EXTRA_GFGlyphTracerTest_DEPENDENCIES) 
	@rm -f GFGlyphTracerTest$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(GFGlyphTracerTest_OBJECTS) $(GFGlyphTracerTest_LDADD) $(LIBS)

GFReaderTest$(EXEEXT): $(GFReaderTest_OBJECTS) $(GFReaderTest_DEPENDENCIES) $(EXTRA_GFReaderTest_DEPENDENCIES) 
	@rm -f GFReaderTest$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(GFReaderTest_OBJECTS) $(GFReaderTest_LDADD) $(LIBS)

GhostscriptTest$(EXEEXT): $(GhostscriptTest_OBJECTS) $(GhostscriptTest_DEPENDENCIES) $(EXTRA_GhostscriptTest_DEPENDENCIES) 
	@rm -f GhostscriptTest$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(GhostscriptTest_OBJECTS) $(GhostscriptTest_LDADD) $(LIBS)

GraphicsPathTest$(EXEEXT): $(GraphicsPathTest_OBJECTS) $(GraphicsPathTest_DEPENDENCIES) $(EXTRA_GraphicsPathTest_DEPENDENCIES) 
	@rm -f GraphicsPathTest$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(GraphicsPathTest_OBJECTS) $(GraphicsPathTest_LDADD) $(LIBS)

JFMReaderTest$(EXEEXT): $(JFMReaderTest_OBJECTS) $(JFMReaderTest_DEPENDENCIES) $(EXTRA_JFMReaderTest_DEPENDENCIES) 
	@rm -f JFMReaderTest$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(JFMReaderTest_OBJECTS) $(JFMReaderTest_LDADD) $(LIBS)

LengthTest$(EXEEXT): $(LengthTest_OBJECTS) $(LengthTest_DEPENDENCIES) $(EXTRA_LengthTest_DEPENDENCIES) 
	@rm -f LengthTest$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(LengthTest_OBJECTS) $(LengthTest_LDADD) $(LIBS)

MapLineTest$(EXEEXT): $(MapLineTest_OBJECTS) $(MapLineTest_DEPENDENCIES) $(EXTRA_MapLineTest_DEPENDENCIES) 
	@rm -f MapLineTest$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(MapLineTest_OBJECTS) $(MapLineTest_LDADD) $(LIBS)

MatrixTest$(EXEEXT): $(MatrixTest_OBJECTS) $(MatrixTest_DEPENDENCIES) $(EXTRA_MatrixTest_DEPENDENCIES) 
	@rm -f MatrixTest$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(MatrixTest_OBJECTS) $(MatrixTest_LDADD) $(LIBS)

MessageExceptionTest$(EXEEXT): $(MessageExceptionTest_OBJECTS) $(MessageExceptionTest_DEPENDENCIES) $(EXTRA_MessageExceptionTest_DEPENDENCIES) 
	@rm -f MessageExceptionTest$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(MessageExceptionTest_OBJECTS) $(MessageExceptionTest_LDADD) $(LIBS)

PSInterpreterTest$(EXEEXT): $(PSInterpreterTest_OBJECTS) $(PSInterpreterTest_DEPENDENCIES) $(EXTRA_PSInterpreterTest_DEPENDENCIES) 
	@rm -f PSInterpreterTest$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(PSInterpreterTest_OBJECTS) $(PSInterpreterTest_LDADD) $(LIBS)

PageRagesTest$(EXEEXT): $(PageRagesTest_OBJECTS) $(PageRagesTest_DEPENDENCIES) $(EXTRA_PageRagesTest_DEPENDENCIES) 
	@rm -f PageRagesTest$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(PageRagesTest_OBJECTS) $(PageRagesTest_LDADD) $(LIBS)

PageSizeTest$(EXEEXT): $(PageSizeTest_OBJECTS) $(PageSizeTest_DEPENDENCIES) $(EXTRA_PageSizeTest_DEPENDENCIES) 
	@rm -f PageSizeTest$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(PageSizeTest_OBJECTS) $(PageSizeTest_LDADD) $(LIBS)

PairTest$(EXEEXT): $(PairTest_OBJECTS) $(PairTest_DEPENDENCIES) $(EXTRA_PairTest_DEPENDENCIES) 
	@rm -f PairTest$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(PairTest_OBJECTS) $(PairTest_LDADD) $(LIBS)

RangeMapTest$(EXEEXT): $(RangeMapTest_OBJECTS) $(RangeMapTest_DEPENDENCIES) $(EXTRA_RangeMapTest_DEPENDENCIES) 
	@rm -f RangeMapTest$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(RangeMapTest_OBJECTS) $(RangeMapTest_LDADD) $(LIBS)

SVGOutputTest$(EXEEXT): $(SVGOutputTest_OBJECTS) $(SVGOutputTest_DEPENDENCIES) $(EXTRA_SVGOutputTest_DEPENDENCIES) 
	@rm -f SVGOutputTest$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(SVGOutputTest_OBJECTS) $(SVGOutputTest_LDADD) $(LIBS)

ShadingPatchTest$(EXEEXT): $(ShadingPatchTest_OBJECTS) $(ShadingPatchTest_DEPENDENCIES) $(EXTRA_ShadingPatchTest_DEPENDENCIES) 
	@rm -f ShadingPatchTest$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(ShadingPatchTest_OBJECTS) $(ShadingPatchTest_LDADD) $(LIBS)

SplittedCharInputBufferTest$(EXEEXT): $(SplittedCharInputBufferTest_OBJECTS) $(SplittedCharInputBufferTest_DEPENDENCIES) $(EXTRA_SplittedCharInputBufferTest_DEPENDENCIES) 
	@rm -f SplittedCharInputBufferTest$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(SplittedCharInputBufferTest_OBJECTS) $(SplittedCharInputBufferTest_LDADD) $(LIBS)

StreamInputBufferTest$(EXEEXT): $(StreamInputBufferTest_OBJECTS) $(StreamInputBufferTest_DEPENDENCIES) $(EXTRA_StreamInputBufferTest_DEPENDENCIES) 
	@rm -f StreamInputBufferTest$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(StreamInputBufferTest_OBJECTS) $(StreamInputBufferTest_LDADD) $(LIBS)

StreamReaderTest$(EXEEXT): $(StreamReaderTest_OBJECTS) $(StreamReaderTest_DEPENDENCIES) $(EXTRA_StreamReaderTest_DEPENDENCIES) 
	@rm -f StreamReaderTest$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(StreamReaderTest_OBJECTS) $(StreamReaderTest_LDADD) $(LIBS)

StreamWriterTest$(EXEEXT): $(StreamWriterTest_OBJECTS) $(StreamWriterTest_DEPENDENCIES) $(EXTRA_StreamWriterTest_DEPENDENCIES) 
	@rm -f StreamWriterTest$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(StreamWriterTest_OBJECTS) $(StreamWriterTest_LDADD) $(LIBS)

SubfontTest$(EXEEXT): $(SubfontTest_OBJECTS) $(SubfontTest_DEPENDENCIES) $(EXTRA_SubfontTest_DEPENDENCIES) 
	@rm -f SubfontTest$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(SubfontTest_OBJECTS) $(SubfontTest_LDADD) $(LIBS)

TFMReaderTest$(EXEEXT): $(TFMReaderTest_OBJECTS) $(TFMReaderTest_DEPENDENCIES) $(EXTRA_TFMReaderTest_DEPENDENCIES) 
	@rm -f TFMReaderTest$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(TFMReaderTest_OBJECTS) $(TFMReaderTest_LDADD) $(LIBS)

TensorProductPatchTest$(EXEEXT): $(TensorProductPatchTest_OBJECTS) $(TensorProductPatchTest_DEPENDENCIES) $(EXTRA_TensorProductPatchTest_DEPENDENCIES) 
	@rm -f TensorProductPatchTest$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(TensorProductPatchTest_OBJECTS) $(TensorProductPatchTest_LDADD) $(LIBS)

ToUnicodeMapTest$(EXEEXT): $(ToUnicodeMapTest_OBJECTS) $(ToUnicodeMapTest_DEPENDENCIES) $(EXTRA_ToUnicodeMapTest_DEPENDENCIES) 
	@rm -f ToUnicodeMapTest$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(ToUnicodeMapTest_OBJECTS) $(ToUnicodeMapTest_LDADD) $(LIBS)

TriangularPatchTest$(EXEEXT): $(TriangularPatchTest_OBJECTS) $(TriangularPatchTest_DEPENDENCIES) $(EXTRA_TriangularPatchTest_DEPENDENCIES) 
	@rm -f TriangularPatchTest$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(TriangularPatchTest_OBJECTS) $(TriangularPatchTest_LDADD) $(LIBS)

UnicodeTest$(EXEEXT): $(UnicodeTest_OBJECTS) $(UnicodeTest_DEPENDENCIES) $(EXTRA_UnicodeTest_DEPENDENCIES) 
	@rm -f UnicodeTest$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(UnicodeTest_OBJECTS) $(UnicodeTest_LDADD) $(LIBS)

UtilityTest$(EXEEXT): $(UtilityTest_OBJECTS) $(UtilityTest_DEPENDENCIES) $(EXTRA_UtilityTest_DEPENDENCIES) 
	@rm -f UtilityTest$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(UtilityTest_OBJECTS) $(UtilityTest_LDADD) $(LIBS)

VectorIteratorTest$(EXEEXT): $(VectorIteratorTest_OBJECTS) $(VectorIteratorTest_DEPENDENCIES) $(EXTRA_VectorIteratorTest_DEPENDENCIES) 
	@rm -f VectorIteratorTest$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(VectorIteratorTest_OBJECTS) $(VectorIteratorTest_LDADD) $(LIBS)

VectorStreamTest$(EXEEXT): $(VectorStreamTest_OBJECTS) $(VectorStreamTest_DEPENDENCIES) $(EXTRA_VectorStreamTest_DEPENDENCIES) 
	@rm -f VectorStreamTest$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(VectorStreamTest_OBJECTS) $(VectorStreamTest_LDADD) $(LIBS)

XMLNodeTest$(EXEEXT): $(XMLNodeTest_OBJECTS) $(XMLNodeTest_DEPENDENCIES) $(EXTRA_XMLNodeTest_DEPENDENCIES) 
	@rm -f XMLNodeTest$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(XMLNodeTest_OBJECTS) $(XMLNodeTest_LDADD) $(LIBS)

XMLStringTest$(EXEEXT): $(XMLStringTest_OBJECTS) $(XMLStringTest_DEPENDENCIES) $(EXTRA_XMLStringTest_DEPENDENCIES) 
	@rm -f XMLStringTest$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(XMLStringTest_OBJECTS) $(XMLStringTest_LDADD) $(LIBS)

hashcheck$(EXEEXT): $(hashcheck_OBJECTS) $(hashcheck_DEPENDENCIES) $(EXTRA_hashcheck_DEPENDENCIES) 
	@rm -f hashcheck$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(hashcheck_OBJECTS) $(hashcheck_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/BezierTest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/BitmapTest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/BoundingBoxTest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CMapManagerTest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CMapReaderTest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CMapTest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CRC32Test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CalculatorTest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ColorSpecialTest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ColorTest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CommandLineTest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/DependencyGraphTest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/DirectoryTest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/DvisvgmSpecialTest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/EmSpecialTest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/FileFinderTest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/FilePathTest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/FileSystemTest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/FontManagerTest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/FontMapTest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/GFGlyphTracerTest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/GFReaderTest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/GhostscriptTest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/GraphicsPathTest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/JFMReaderTest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/LengthTest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/MapLineTest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/MatrixTest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/MessageExceptionTest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/PSInterpreterTest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/PageRagesTest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/PageSizeTest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/PairTest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/RangeMapTest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SVGOutputTest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ShadingPatchTest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SplittedCharInputBufferTest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/StreamInputBufferTest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/StreamReaderTest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/StreamWriterTest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SubfontTest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TFMReaderTest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TensorProductPatchTest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ToUnicodeMapTest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TriangularPatchTest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/UnicodeTest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/UtilityTest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/VectorIteratorTest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/VectorStreamTest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/XMLNodeTest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/XMLStringTest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hashcheck-hashcheck.Po@am__quote@

.cpp.o:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

hashcheck-hashcheck.o: hashcheck.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hashcheck_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hashcheck-hashcheck.o -MD -MP -MF $(DEPDIR)/hashcheck-hashcheck.Tpo -c -o hashcheck-hashcheck.o `test -f 'hashcheck.cpp' || echo '$(srcdir)/'`hashcheck.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/hashcheck-hashcheck.Tpo $(DEPDIR)/hashcheck-hashcheck.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='hashcheck.cpp' object='hashcheck-hashcheck.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hashcheck_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hashcheck-hashcheck.o `test -f 'hashcheck.cpp' || echo '$(srcdir)/'`hashcheck.cpp

hashcheck-hashcheck.obj: hashcheck.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hashcheck_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hashcheck-hashcheck.obj -MD -MP -MF $(DEPDIR)/hashcheck-hashcheck.Tpo -c -o hashcheck-hashcheck.obj `if test -f 'hashcheck.cpp'; then $(CYGPATH_W) 'hashcheck.cpp'; else $(CYGPATH_W) '$(srcdir)/hashcheck.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/hashcheck-hashcheck.Tpo $(DEPDIR)/hashcheck-hashcheck.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='hashcheck.cpp' object='hashcheck-hashcheck.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(hashcheck_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hashcheck-hashcheck.obj `if test -f 'hashcheck.cpp'; then $(CYGPATH_W) 'hashcheck.cpp'; else $(CYGPATH_W) '$(srcdir)/hashcheck.cpp'; fi`

# This directory's subdirectories are mostly independent; you can cd
# into them and run 'make' without going through this Makefile.
# To change the values of 'make' variables: instead of editing Makefiles,
# (1) if the variable is set in 'config.status', edit 'config.status'
#     (which will cause the Makefiles to be regenerated when you run 'make');
# (2) otherwise, pass the desired values on the 'make' command line.
$(am__recursive_targets):
	@fail=; \
	if $(am__make_keepgoing); then \
	  failcom='fail=yes'; \
	else \
	  failcom='exit 1'; \
	fi; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-recursive
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      set "$$@" "$$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-recursive

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-recursive

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

# Recover from deleted '.trs' file; this should ensure that
# "rm -f foo.log; make foo.trs" re-run 'foo.test', and re-create
# both 'foo.log' and 'foo.trs'.  Break the recipe in two subshells
# to avoid problems with "make -n".
.log.trs:
	rm -f $< $@
	$(MAKE) $(AM_MAKEFLAGS) $<

# Leading 'am--fnord' is there to ensure the list of targets does not
# expand to empty, as could happen e.g. with make check TESTS=''.
am--fnord $(TEST_LOGS) $(TEST_LOGS:.log=.trs): $(am__force_recheck)
am--force-recheck:
	@:

$(TEST_SUITE_LOG): $(TEST_LOGS)
	@$(am__set_TESTS_bases); \
	am__f_ok () { test -f "$$1" && test -r "$$1"; }; \
	redo_bases=`for i in $$bases; do \
	              am__f_ok $$i.trs && am__f_ok $$i.log || echo $$i; \
	            done`; \
	if test -n "$$redo_bases"; then \
	  redo_logs=`for i in $$redo_bases; do echo $$i.log; done`; \
	  redo_results=`for i in $$redo_bases; do echo $$i.trs; done`; \
	  if $(am__make_dryrun); then :; else \
	    rm -f $$redo_logs && rm -f $$redo_results || exit 1; \
	  fi; \
	fi; \
	if test -n "$$am__remaking_logs"; then \
	  echo "fatal: making $(TEST_SUITE_LOG): possible infinite" \
	       "recursion detected" >&2; \
	elif test -n "$$redo_logs"; then \
	  am__remaking_logs=yes $(MAKE) $(AM_MAKEFLAGS) $$redo_logs; \
	fi; \
	if $(am__make_dryrun); then :; else \
	  st=0;  \
	  errmsg="fatal: making $(TEST_SUITE_LOG): failed to create"; \
	  for i in $$redo_bases; do \
	    test -f $$i.trs && test -r $$i.trs \
	      || { echo "$$errmsg $$i.trs" >&2; st=1; }; \
	    test -f $$i.log && test -r $$i.log \
	      || { echo "$$errmsg $$i.log" >&2; st=1; }; \
	  done; \
	  test $$st -eq 0 || exit 1; \
	fi
	@$(am__sh_e_setup); $(am__tty_colors); $(am__set_TESTS_bases); \
	ws='[ 	]'; \
	results=`for b in $$bases; do echo $$b.trs; done`; \
	test -n "$$results" || results=/dev/null; \
	all=`  grep "^$$ws*:test-result:"           $$results | wc -l`; \
	pass=` grep "^$$ws*:test-result:$$ws*PASS"  $$results | wc -l`; \
	fail=` grep "^$$ws*:test-result:$$ws*FAIL"  $$results | wc -l`; \
	skip=` grep "^$$ws*:test-result:$$ws*SKIP"  $$results | wc -l`; \
	xfail=`grep "^$$ws*:test-result:$$ws*XFAIL" $$results | wc -l`; \
	xpass=`grep "^$$ws*:test-result:$$ws*XPASS" $$results | wc -l`; \
	error=`grep "^$$ws*:test-result:$$ws*ERROR" $$results | wc -l`; \
	if test `expr $$fail + $$xpass + $$error` -eq 0; then \
	  success=true; \
	else \
	  success=false; \
	fi; \
	br='==================='; br=$$br$$br$$br$$br; \
	result_count () \
	{ \
	    if test x"$$1" = x"--maybe-color"; then \
	      maybe_colorize=yes; \
	    elif test x"$$1" = x"--no-color"; then \
	      maybe_colorize=no; \
	    else \
	      echo "$@: invalid 'result_count' usage" >&2; exit 4; \
	    fi; \
	    shift; \
	    desc=$$1 count=$$2; \
	    if test $$maybe_colorize = yes && test $$count -gt 0; then \
	      color_start=$$3 color_end=$$std; \
	    else \
	      color_start= color_end=; \
	    fi; \
	    echo "$${color_start}# $$desc $$count$${color_end}"; \
	}; \
	create_testsuite_report () \
	{ \
	  result_count $$1 "TOTAL:" $$all   "$$brg"; \
	  result_count $$1 "PASS: " $$pass  "$$grn"; \
	  result_count $$1 "SKIP: " $$skip  "$$blu"; \
	  result_count $$1 "XFAIL:" $$xfail "$$lgn"; \
	  result_count $$1 "FAIL: " $$fail  "$$red"; \
	  result_count $$1 "XPASS:" $$xpass "$$red"; \
	  result_count $$1 "ERROR:" $$error "$$mgn"; \
	}; \
	{								\
	  echo "$(PACKAGE_STRING): $(subdir)/$(TEST_SUITE_LOG)" |	\
	    $(am__rst_title);						\
	  create_testsuite_report --no-color;				\
	  echo;								\
	  echo ".. contents:: :depth: 2";				\
	  echo;								\
	  for b in $$bases; do echo $$b; done				\
	    | $(am__create_global_log);					\
	} >$(TEST_SUITE_LOG).tmp || exit 1;				\
	mv $(TEST_SUITE_LOG).tmp $(TEST_SUITE_LOG);			\
	if $$success; then						\
	  col="$$grn";							\
	 else								\
	  col="$$red";							\
	  test x"$$VERBOSE" = x || cat $(TEST_SUITE_LOG);		\
	fi;								\
	echo "$${col}$$br$${std}"; 					\
	echo "$${col}Testsuite summary for $(PACKAGE_STRING)$${std}";	\
	echo "$${col}$$br$${std}"; 					\
	create_testsuite_report --maybe-color;				\
	echo "$$col$$br$$std";						\
	if $$success; then :; else					\
	  echo "$${col}See $(subdir)/$(TEST_SUITE_LOG)$${std}";		\
	  if test -n "$(PACKAGE_BUGREPORT)"; then			\
	    echo "$${col}Please report to $(PACKAGE_BUGREPORT)$${std}";	\
	  fi;								\
	  echo "$$col$$br$$std";					\
	fi;								\
	$$success || exit 1

check-TESTS:
	@list='$(RECHECK_LOGS)';           test -z "$$list" || rm -f $$list
	@list='$(RECHECK_LOGS:.log=.trs)'; test -z "$$list" || rm -f $$list
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	trs_list=`for i in $$bases; do echo $$i.trs; done`; \
	log_list=`echo $$log_list`; trs_list=`echo $$trs_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) TEST_LOGS="$$log_list"; \
	exit $$?;
recheck: all $(check_PROGRAMS)
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	bases=`for i in $$bases; do echo $$i; done \
	         | $(am__list_recheck_tests)` || exit 1; \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	log_list=`echo $$log_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) \
	        am__force_recheck=am--force-recheck \
	        TEST_LOGS="$$log_list"; \
	exit $$?
hashcheck.log: hashcheck$(EXEEXT)
	@p='hashcheck$(EXEEXT)'; \
	b='hashcheck'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
BezierTest.log: BezierTest$(EXEEXT)
	@p='BezierTest$(EXEEXT)'; \
	b='BezierTest'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
BitmapTest.log: BitmapTest$(EXEEXT)
	@p='BitmapTest$(EXEEXT)'; \
	b='BitmapTest'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
BoundingBoxTest.log: BoundingBoxTest$(EXEEXT)
	@p='BoundingBoxTest$(EXEEXT)'; \
	b='BoundingBoxTest'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
CalculatorTest.log: CalculatorTest$(EXEEXT)
	@p='CalculatorTest$(EXEEXT)'; \
	b='CalculatorTest'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
CMapManagerTest.log: CMapManagerTest$(EXEEXT)
	@p='CMapManagerTest$(EXEEXT)'; \
	b='CMapManagerTest'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
CMapReaderTest.log: CMapReaderTest$(EXEEXT)
	@p='CMapReaderTest$(EXEEXT)'; \
	b='CMapReaderTest'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
CMapTest.log: CMapTest$(EXEEXT)
	@p='CMapTest$(EXEEXT)'; \
	b='CMapTest'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
ColorSpecialTest.log: ColorSpecialTest$(EXEEXT)
	@p='ColorSpecialTest$(EXEEXT)'; \
	b='ColorSpecialTest'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
ColorTest.log: ColorTest$(EXEEXT)
	@p='ColorTest$(EXEEXT)'; \
	b='ColorTest'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
CommandLineTest.log: CommandLineTest$(EXEEXT)
	@p='CommandLineTest$(EXEEXT)'; \
	b='CommandLineTest'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
CRC32Test.log: CRC32Test$(EXEEXT)
	@p='CRC32Test$(EXEEXT)'; \
	b='CRC32Test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
DependencyGraphTest.log: DependencyGraphTest$(EXEEXT)
	@p='DependencyGraphTest$(EXEEXT)'; \
	b='DependencyGraphTest'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
DirectoryTest.log: DirectoryTest$(EXEEXT)
	@p='DirectoryTest$(EXEEXT)'; \
	b='DirectoryTest'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
DvisvgmSpecialTest.log: DvisvgmSpecialTest$(EXEEXT)
	@p='DvisvgmSpecialTest$(EXEEXT)'; \
	b='DvisvgmSpecialTest'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
EmSpecialTest.log: EmSpecialTest$(EXEEXT)
	@p='EmSpecialTest$(EXEEXT)'; \
	b='EmSpecialTest'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
FileFinderTest.log: FileFinderTest$(EXEEXT)
	@p='FileFinderTest$(EXEEXT)'; \
	b='FileFinderTest'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
FilePathTest.log: FilePathTest$(EXEEXT)
	@p='FilePathTest$(EXEEXT)'; \
	b='FilePathTest'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
FileSystemTest.log: FileSystemTest$(EXEEXT)
	@p='FileSystemTest$(EXEEXT)'; \
	b='FileSystemTest'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
FontManagerTest.log: FontManagerTest$(EXEEXT)
	@p='FontManagerTest$(EXEEXT)'; \
	b='FontManagerTest'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
FontMapTest.log: FontMapTest$(EXEEXT)
	@p='FontMapTest$(EXEEXT)'; \
	b='FontMapTest'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
GFGlyphTracerTest.log: GFGlyphTracerTest$(EXEEXT)
	@p='GFGlyphTracerTest$(EXEEXT)'; \
	b='GFGlyphTracerTest'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
GFReaderTest.log: GFReaderTest$(EXEEXT)
	@p='GFReaderTest$(EXEEXT)'; \
	b='GFReaderTest'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
GhostscriptTest.log: GhostscriptTest$(EXEEXT)
	@p='GhostscriptTest$(EXEEXT)'; \
	b='GhostscriptTest'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
GraphicsPathTest.log: GraphicsPathTest$(EXEEXT)
	@p='GraphicsPathTest$(EXEEXT)'; \
	b='GraphicsPathTest'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
JFMReaderTest.log: JFMReaderTest$(EXEEXT)
	@p='JFMReaderTest$(EXEEXT)'; \
	b='JFMReaderTest'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
LengthTest.log: LengthTest$(EXEEXT)
	@p='LengthTest$(EXEEXT)'; \
	b='LengthTest'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
MapLineTest.log: MapLineTest$(EXEEXT)
	@p='MapLineTest$(EXEEXT)'; \
	b='MapLineTest'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
MatrixTest.log: MatrixTest$(EXEEXT)
	@p='MatrixTest$(EXEEXT)'; \
	b='MatrixTest'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
MessageExceptionTest.log: MessageExceptionTest$(EXEEXT)
	@p='MessageExceptionTest$(EXEEXT)'; \
	b='MessageExceptionTest'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
PageRagesTest.log: PageRagesTest$(EXEEXT)
	@p='PageRagesTest$(EXEEXT)'; \
	b='PageRagesTest'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
PageSizeTest.log: PageSizeTest$(EXEEXT)
	@p='PageSizeTest$(EXEEXT)'; \
	b='PageSizeTest'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
PairTest.log: PairTest$(EXEEXT)
	@p='PairTest$(EXEEXT)'; \
	b='PairTest'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
PSInterpreterTest.log: PSInterpreterTest$(EXEEXT)
	@p='PSInterpreterTest$(EXEEXT)'; \
	b='PSInterpreterTest'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
RangeMapTest.log: RangeMapTest$(EXEEXT)
	@p='RangeMapTest$(EXEEXT)'; \
	b='RangeMapTest'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
ShadingPatchTest.log: ShadingPatchTest$(EXEEXT)
	@p='ShadingPatchTest$(EXEEXT)'; \
	b='ShadingPatchTest'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
SplittedCharInputBufferTest.log: SplittedCharInputBufferTest$(EXEEXT)
	@p='SplittedCharInputBufferTest$(EXEEXT)'; \
	b='SplittedCharInputBufferTest'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
StreamInputBufferTest.log: StreamInputBufferTest$(EXEEXT)
	@p='StreamInputBufferTest$(EXEEXT)'; \
	b='StreamInputBufferTest'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
StreamReaderTest.log: StreamReaderTest$(EXEEXT)
	@p='StreamReaderTest$(EXEEXT)'; \
	b='StreamReaderTest'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
StreamWriterTest.log: StreamWriterTest$(EXEEXT)
	@p='StreamWriterTest$(EXEEXT)'; \
	b='StreamWriterTest'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
SubfontTest.log: SubfontTest$(EXEEXT)
	@p='SubfontTest$(EXEEXT)'; \
	b='SubfontTest'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
SVGOutputTest.log: SVGOutputTest$(EXEEXT)
	@p='SVGOutputTest$(EXEEXT)'; \
	b='SVGOutputTest'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
TensorProductPatchTest.log: TensorProductPatchTest$(EXEEXT)
	@p='TensorProductPatchTest$(EXEEXT)'; \
	b='TensorProductPatchTest'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
TFMReaderTest.log: TFMReaderTest$(EXEEXT)
	@p='TFMReaderTest$(EXEEXT)'; \
	b='TFMReaderTest'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
ToUnicodeMapTest.log: ToUnicodeMapTest$(EXEEXT)
	@p='ToUnicodeMapTest$(EXEEXT)'; \
	b='ToUnicodeMapTest'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
TriangularPatchTest.log: TriangularPatchTest$(EXEEXT)
	@p='TriangularPatchTest$(EXEEXT)'; \
	b='TriangularPatchTest'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
UnicodeTest.log: UnicodeTest$(EXEEXT)
	@p='UnicodeTest$(EXEEXT)'; \
	b='UnicodeTest'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
UtilityTest.log: UtilityTest$(EXEEXT)
	@p='UtilityTest$(EXEEXT)'; \
	b='UtilityTest'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
VectorIteratorTest.log: VectorIteratorTest$(EXEEXT)
	@p='VectorIteratorTest$(EXEEXT)'; \
	b='VectorIteratorTest'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
VectorStreamTest.log: VectorStreamTest$(EXEEXT)
	@p='VectorStreamTest$(EXEEXT)'; \
	b='VectorStreamTest'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
XMLNodeTest.log: XMLNodeTest$(EXEEXT)
	@p='XMLNodeTest$(EXEEXT)'; \
	b='XMLNodeTest'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
XMLStringTest.log: XMLStringTest$(EXEEXT)
	@p='XMLStringTest$(EXEEXT)'; \
	b='XMLStringTest'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
check-conv.log: check-conv
	@p='check-conv'; \
	b='check-conv'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
.test.log:
	@p='$<'; \
	$(am__set_b); \
	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
@am__EXEEXT_TRUE@.test$(EXEEXT).log:
@am__EXEEXT_TRUE@	@p='$<'; \
@am__EXEEXT_TRUE@	$(am__set_b); \
@am__EXEEXT_TRUE@	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
@am__EXEEXT_TRUE@	--log-file $$b.log --trs-file $$b.trs \
@am__EXEEXT_TRUE@	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
@am__EXEEXT_TRUE@	"$$tst" $(AM_TESTS_FD_REDIRECT)

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    $(am__make_dryrun) \
	      || test -d "$(distdir)/$$subdir" \
	      || $(MKDIR_P) "$(distdir)/$$subdir" \
	      || exit 1; \
	    dir1=$$subdir; dir2="$(distdir)/$$subdir"; \
	    $(am__relativize); \
	    new_distdir=$$reldir; \
	    dir1=$$subdir; dir2="$(top_distdir)"; \
	    $(am__relativize); \
	    new_top_distdir=$$reldir; \
	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\"; \
	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \
	    ($(am__cd) $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$new_top_distdir" \
	        distdir="$$new_distdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
		am__skip_mode_fix=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-recursive
all-am: Makefile
installdirs: installdirs-recursive
installdirs-am:
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:
	-test -z "$(TEST_LOGS)" || rm -f $(TEST_LOGS)
	-test -z "$(TEST_LOGS:.log=.trs)" || rm -f $(TEST_LOGS:.log=.trs)
	-test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-recursive

clean-am: clean-checkPROGRAMS clean-generic mostlyclean-am

distclean: distclean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

html-am:

info: info-recursive

info-am:

install-data-am:

install-dvi: install-dvi-recursive

install-dvi-am:

install-exec-am:

install-html: install-html-recursive

install-html-am:

install-info: install-info-recursive

install-info-am:

install-man:

install-pdf: install-pdf-recursive

install-pdf-am:

install-ps: install-ps-recursive

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am:

.MAKE: $(am__recursive_targets) check-am install-am install-strip

.PHONY: $(am__recursive_targets) CTAGS GTAGS TAGS all all-am check \
	check-TESTS check-am clean clean-checkPROGRAMS clean-generic \
	cscopelist-am ctags ctags-am distclean distclean-compile \
	distclean-generic distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs installdirs-am maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am recheck tags tags-am \
	uninstall uninstall-am

.PRECIOUS: Makefile

hashcheck.cpp: genhashcheck.py $(top_srcdir)/src/AGLTable.hpp $(top_srcdir)/libs/xxHash/xxhash.h
	python $^ >$@

@CODE_COVERAGE_RULES@

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
